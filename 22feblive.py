
    "import numpy as np \n",
    "import pandas as pd\n",
    "import streamlit as st\n",
    "import pickle\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.linear_model import Ridge,Lasso\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.datasets import load_diabetes\n",
    "\n",
    "diabetes = load_diabetes()\n",
    "\n",
    "def load_model():\n",
    "    with  open('Diabetes_predict.pkl','rb') as file:\n",
    "     model,scaler=pickle.load(file)\n",
    "    return model,scaler\n",
    "\n",
    "df = pd.DataFrame(diabetes.data, columns=diabetes.feature_names)\n",
    "df['target']  = diabetes.target\n",
    "\n",
    "x = df.drop(columns=['target'])\n",
    "y = df['target']\n",
    "\n",
    "x_train , x_test , y_train,y_test = train_test_split(x,y , test_size=.2)\n",
    "\n",
    "scaler = StandardScaler()\n",
    "x_train_scaled = scaler.fit_transform(x_train)\n",
    "x_test_scaled = scaler.transform(x_test)\n",
    "\n",
    "ridge_model = Ridge()\n",
    "lasso_model = Lasso()\n",
    "ridge_model.fit(x_train_scaled,y_train)\n",
    "lasso_model.fit(x_train_scaled,y_train)\n",
    "\n",
    "\n",
    "ridge_model.predict(x_test_scaled)\n",
    "lasso_model.predict(x_test_scaled)\n",
    "\n",
    "mean_squared_error(y_test,ridge_model.predict(x_test_scaled))\n",
    "mean_squared_error(y_test,lasso_model.predict(x_test_scaled))\n",
    "\n",
    "\n",
    "\n",
    "st.title(\"Diabetes prediction\")\n",
    "st.write(\"Enter your Name\")\n",
    "    \n",
    "Age = st.number_input(\"Age\",min_value = 1, max_value = 100 , value = 20)\n",
    "Sex = st.number_input(\"Sex\", min_value = 0, max_value = 1 , value = 0)\n",
    "Bmi = st.number_input(\"BMI\", min_value = 1, max_value = 100, value = 0)\n",
    "BP = st.number_input(\"BP\", min_value = 1, max_value = 100, value = 0)\n",
    "s1 = st.number_input(\"s1\", min_value = 1, max_value = 100, value = 0)\n",
    "s2 = st.number_input(\"s2\", min_value = 1, max_value = 100, value = 0)\n",
    "s3 = st.number_input(\"s3\", min_value = 1, max_value = 100, value = 0)\n",
    "s4 = st.number_input(\"s4\", min_value = 1, max_value = 100, value = 0)\n",
    "s5 = st.number_input(\"s5\", min_value = 1, max_value = 100, value = 0)\n",
    "s6 = st.number_input(\"s6\", min_value = 0, max_value = 100, value = 0)\n",
    "\n",
    "if st.button(\"predict-your_score\"):\n",
    "        user_data = {\n",
    "            \"Age\":Age,\n",
    "            \"Sex\":Sex,\n",
    "            \"BMI\":Bmi,\n",
    "            \"BP\":BP,\n",
    "            \"s1\":s1,\n",
    "            \"s2\": s2,\n",
    "            \"s3\": s3,\n",
    "            \"s4\": s4,\n",
    "            \"s5\": s5,\n",
    "            \"s6\": s6\n",
    "        }\n",
    "        \n",
    "\n",
    "\n",
    "   \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
